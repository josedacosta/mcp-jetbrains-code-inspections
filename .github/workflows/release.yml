name: Release

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:
        inputs:
            version:
                description: 'Version to release (e.g., v1.0.0)'
                required: true
                type: string

permissions:
    contents: write
    packages: write

jobs:
    release:
        name: Create Release
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'yarn'
                  registry-url: 'https://registry.npmjs.org'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Run tests
              run: |
                  yarn lint
                  yarn typecheck
                  yarn build

            - name: Get version
              id: version
              run: |
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    VERSION="${{ github.event.inputs.version }}"
                  else
                    VERSION=${GITHUB_REF#refs/tags/}
                  fi
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Generate changelog
              id: changelog
              run: |
                  # Extract changelog for this version
                  CHANGELOG=$(awk '/^## \[?'${VERSION#v}'/,/^## \[?[0-9]/' CHANGELOG.md | head -n -1)
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  echo "$CHANGELOG" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.version.outputs.version }}
                  name: Release ${{ steps.version.outputs.version }}
                  body: ${{ steps.changelog.outputs.changelog }}
                  draft: false
                  prerelease: ${{ contains(steps.version.outputs.version, '-') }}
                  generate_release_notes: true

            - name: Publish to npm
              if: ${{ !contains(steps.version.outputs.version, '-') }}
              run: |
                  npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              continue-on-error: true
